pipeline {
    agent any
    environment {
        SONAR_HOME = tool "sonar"
        GIT_REPO_NAME = "DevOps-Project-Swiggy"
        GIT_USER_NAME = "mdasad1270"
    }
    stages {
        stage("Clean Workspace") {
            steps {
                cleanWs()
                echo "Clean workspace"
            }
        }
        stage("Code Checkout") {
            steps {
                git url: "https://github.com/mdasad1270/DevOps-Project-Swiggy.git", branch: "master"
            }
        }
        stage("Sonarqube Analysis") {
            steps {
                withSonarQubeEnv("sonar") {
                    sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=swiggy -Dsonar.projectKey=swiggy"
                }
            }
        }
        stage("Quality Gate") {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'Sonar'
            }
        }
        stage("TRIVY FS SCAN") {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Image  Build") {
            steps {
                sh "docker build -t swiggy-app-img ."
            }
        }
        stage("Image Push to Docker Hub") {
            steps {
                withCredentials([usernamePassword(credentialsId: "docker", passwordVariable: "dockerPass", usernameVariable: "dockerUser")]) {
                    sh "docker login -u ${env.dockerUser} -p ${env.dockerPass}"
                    sh "docker tag swiggy-app-img:latest ${env.dockerUser}/swiggy-app-img:${BUILD_NUMBER}"
                    sh "docker push ${env.dockerUser}/swiggy-app-img:${BUILD_NUMBER}"
                }
            }
        }
        stage("Image Scan") {
            steps {
                sh "trivy image asadkhan03/swiggy-app-img:latest > trivy.txt"
            }
        }
        stage("Update Image Tag") {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "asadkhan.@gmail.com"
                        git config user.name "Asad Khan"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" ArgoCD/deployment.yml
                        git add ArgoCD/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                    '''
                }
            }
        }
    }
}

